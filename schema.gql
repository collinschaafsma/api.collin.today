# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type Activity {
  id: ID!
  title: String!
  description: String
  type: String!
  publishAt: DateTime!
  createdAt: DateTime!
  updatedAt: DateTime!
  stravaActivity: StravaActivity
}

input ActivityCreateInput {
  title: String!
  description: String
  type: String!
  publishAt: DateTime!
}

input ActivityUpdateInput {
  title: String
  description: String
  type: String
  publishAt: DateTime
}

"""
A date-time string at UTC, such as 2019-12-03T09:54:33Z, compliant with the date-time format.
"""
scalar DateTime

type Integration {
  id: ID!
  key: String!
  userId: String!
  accessToken: String!
  refreshToken: String!
  authorizeUrl: String!
  accessTokenUrl: String!
  clientId: String!
  secret: String!
  accessTokenExpiresAt: DateTime!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input IntegrationCreateInput {
  key: String!
  accessToken: String!
  refreshToken: String!
  authorizeUrl: String!
  accessTokenUrl: String!
  clientId: String!
  secret: String!
  accessTokenExpiresAt: DateTime!
}

input IntegrationUpdateInput {
  key: String!
  accessToken: String!
  refreshToken: String!
  authorizeUrl: String!
  accessTokenUrl: String!
  clientId: String!
  secret: String!
  accessTokenExpiresAt: DateTime!
}

type Mutation {
  createActivity(activityCreateInput: ActivityCreateInput!): Activity!
  updateActivity(activityUpdateInput: ActivityUpdateInput!, id: String!): Activity!
  deleteActivity(id: String!): Boolean!
  createUser(userCreateInput: UserCreateInput!): User!
  createIntegration(integrationCreateInput: IntegrationCreateInput!): Integration!
  updateIntegration(integrationUpdateInput: IntegrationUpdateInput!, id: String!): Integration!
  deleteIntegration(id: String!): Boolean!
}

type Query {
  activity(id: String!): Activity!
  activities(limit: Float = 30, page: Float = 1): [Activity!]!
  me: User!
  integrationByKey(key: String!): Integration!
}

type StravaActivity {
  id: ID!
  activityId: String!
  distance: Float
  movingTime: Float
  elapsedTime: Float
  totalElevationGain: Float
  stravaType: String!
  externalId: String
  startDate: DateTime!
  mapSummaryPolyline: String
  mapPolyline: String
  averageSpeed: Float
  maxSpeed: Float
  averageCadence: Float
  averageWatts: Float
  weightedAverageWatts: Float
  maxWatts: Float
  kilojoules: Float
  averageHeartRate: Float
  maxHeartRate: Float
  sufferScore: Float
  calories: Float
  embedToken: String
  deviceName: String
  createdAt: DateTime!
  updatedAt: DateTime!
}

type User {
  id: ID!
  firstName: String!
  lastName: String!
  email: String!
  password: String!
  createdAt: DateTime!
  updatedAt: DateTime!
}

input UserCreateInput {
  firstName: String!
  lastName: String!
  email: String!
  password: String!
}
